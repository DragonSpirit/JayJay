// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`empty renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <TextInput
    onChangeText={[Function]}
    placeholder="Username"
    style={
      Object {
        "fontSize": 20,
        "height": 40,
        "margin": 20,
        "textAlign": "center",
        "width": "80%",
      }
    }
  />
  <View
    style={
      Array [
        Object {
          "marginLeft": 15,
          "marginRight": 15,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={null}
    >
      <View
        pointerEvents="box-only"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#9E9E9E",
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 19,
            },
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "padding": 12,
            },
            undefined,
            undefined,
            undefined,
            Array [
              Object {
                "backgroundColor": "rgba(92, 99,216, 1)",
                "borderColor": "transparent",
                "borderRadius": 5,
                "borderWidth": 0,
              },
              Object {
                "height": 45,
                "width": 300,
              },
            ],
            Object {
              "backgroundColor": "#dadee0",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "white",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontSize": 17.5,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
              ],
            ]
          }
        >
          Добавить пользователя
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`non empty renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "paddingTop": 30,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Username"
      style={
        Array [
          undefined,
          Object {
            "flex": 1,
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "marginLeft": 15,
            "marginRight": 15,
          },
          undefined,
          undefined,
          undefined,
        ]
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={null}
      >
        <View
          pointerEvents="box-only"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#9E9E9E",
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 19,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "padding": 12,
              },
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "backgroundColor": "rgba(92, 99,216, 1)",
                  "borderColor": "transparent",
                  "borderRadius": 5,
                  "borderWidth": 0,
                },
              ],
              Object {
                "backgroundColor": "#dadee0",
              },
              undefined,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Array [
                Object {},
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "white",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontSize": 17.5,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                ],
              ]
            }
          >
            +
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        "test",
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="always"
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#bbb",
                "borderBottomWidth": 1,
                "paddingBottom": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
              undefined,
              false,
              false,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {},
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Array [
                        Object {
                          "color": "#43484d",
                          "fontSize": 17.5,
                        },
                        Object {
                          "marginLeft": 10,
                        },
                        undefined,
                        undefined,
                      ],
                    ]
                  }
                >
                  test
                </Text>
              </View>
              <View>
                <View />
              </View>
            </View>
            <View
              style={
                Array [
                  false,
                  false,
                  false,
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
              underlayColor="white"
            >
              <Text
                accessible={true}
                allowFontScaling={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                      },
                      undefined,
                    ],
                    Object {
                      "fontFamily": "Material Icons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
