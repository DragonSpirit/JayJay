// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`empty renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <TextInput
    onChangeText={[Function]}
    placeholder="Журнал"
    style={
      Object {
        "fontSize": 20,
        "height": 40,
        "margin": 20,
        "textAlign": "center",
        "width": "80%",
      }
    }
  />
  <View
    style={
      Object {
        "borderRadius": 3,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "hsl(208, 8%, 90%)",
            "borderColor": "transparent",
            "borderRadius": 5,
            "borderWidth": 0,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "center",
            "padding": 8,
            "width": 300,
          }
        }
      >
        <Text
          style={
            Object {
              "color": Object {
                "color": Array [
                  208,
                  8,
                  63,
                ],
                "model": "hsl",
                "valpha": 1,
              },
              "fontSize": 18,
              "paddingBottom": 1,
              "paddingTop": 2,
              "textAlign": "center",
            }
          }
        >
          Добавить пользователя
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`non empty renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "paddingTop": 30,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <TextInput
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Добавить журнал"
      style={
        Array [
          undefined,
          Object {
            "flex": 1,
          },
        ]
      }
    />
    <View
      style={
        Object {
          "borderRadius": 3,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "hsl(208, 8%, 90%)",
              "borderColor": "transparent",
              "borderRadius": 5,
              "borderWidth": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 8,
            }
          }
        >
          <Text
            style={
              Object {
                "color": Object {
                  "color": Array [
                    208,
                    8,
                    63,
                  ],
                  "model": "hsl",
                  "valpha": 1,
                },
                "fontSize": 18,
                "paddingBottom": 1,
                "paddingTop": 2,
                "textAlign": "center",
              }
            }
          >
            +
          </Text>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        "test",
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="always"
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderColor": "#bcbbc1",
                "flexDirection": "row",
                "padding": 14,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <Text
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "fontSize": 17,
                  }
                }
                testID="listItemTitle"
                theme={
                  Object {
                    "colors": Object {
                      "disabled": "hsl(208, 8%, 90%)",
                      "divider": "#bcbbc1",
                      "error": "#ff190c",
                      "grey0": "#393e42",
                      "grey1": "#43484d",
                      "grey2": "#5e6977",
                      "grey3": "#86939e",
                      "grey4": "#bdc6cf",
                      "grey5": "#e1e8ee",
                      "greyOutline": "#bbb",
                      "platform": Object {
                        "android": Object {
                          "error": "#f44336",
                          "primary": "#2196f3",
                          "secondary": "#9C27B0",
                          "success": "#4caf50",
                          "warning": "#ffeb3b",
                        },
                        "ios": Object {
                          "error": "#ff3b30",
                          "primary": "#007aff",
                          "secondary": "#5856d6",
                          "success": "#4cd964",
                          "warning": "#ffcc00",
                        },
                      },
                      "primary": "#2089dc",
                      "searchBg": "#303337",
                      "secondary": "#8F0CE8",
                      "success": "#52c41a",
                      "warning": "#faad14",
                    },
                  }
                }
              >
                test
              </Text>
            </View>
            <View
              width={16}
            />
            <View>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 24,
                      },
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  testID="iconIcon"
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
